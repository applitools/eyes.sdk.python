name: Tests
on:
  push:
  pull_request:
jobs:
  dist-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.6"
      - name: Build packages
        run: make eyes_universal/dist eyes_selenium/dist eyes_robotframework/dist
      - uses: actions/upload-artifact@v3
        with:
          name: packages
          path: "*/dist/"

  unit-tests:
    needs: dist-build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '2.7', '3.6', '3.10' ]
        exclude:
          - os: macos-latest
            python-version: '3.6'
          - os: windows-latest
            python-version: '3.6'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - name: Run unit tests
        uses: ./.github/actions/pytest
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
        with:
          package: eyes_selenium
          test-type: unit

  installation-tests:
    needs: dist-build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '2.7', '3.10' ]
        exclude:
          - os: macos-latest
            python-version: '2.7'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - name: Run installation tests
        uses: ./.github/actions/pytest
        with:
          package: eyes_selenium
          test-type: installation

  generated-tests:
    needs: dist-build
    strategy:
      matrix:
        python-version: [ '3.6', '3.10' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: latest
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - name: Run generated tests
        uses: ./.github/actions/pytest
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          APPLITOOLS_API_KEY_READ: ${{ secrets.APPLITOOLS_API_KEY_READ }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        with:
          package: eyes_selenium
          test-type: generated

  robot-framework-tests:
    needs: dist-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.6'
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - name: Run robot framework tests
        uses: ./.github/actions/pytest
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        with:
          package: eyes_robotframework
          test-type: functional


  functional-tests:
    needs: dist-build
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ '2.7', '3.6', '3.10' ]
        exclude:
          - os: windows-latest
            python-version: '3.6'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - name: Run functional tests
        uses: ./.github/actions/pytest
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        with:
          package: eyes_selenium
          test-type: functional
