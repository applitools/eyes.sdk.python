name: Test python packages
on:
  push:
  workflow_call:
    inputs:
      ref:
        description: branch to test
        required: false
        type: string

defaults:
  run:
    working-directory: python

jobs:
  dist-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-python@v3
        with:
          python-version: "3.6"
      - name: Build packages
        run: make eyes_universal/dist eyes_selenium/dist eyes_robotframework/dist
      - uses: actions/upload-artifact@v3
        with:
          name: packages
          if-no-files-found: error
          path: "/python/*/dist/"

  unit-tests:
    needs: dist-build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '2.7', '3.6', '3.10' ]
        exclude:
          - os: macos-latest
            python-version: '3.6'
          - os: windows-latest
            python-version: '3.6'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - run: make eyes_selenium_unit_tests
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

  unit-tests-alpine:
    needs: dist-build
    runs-on: ubuntu-latest
    container: "alpine:latest"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - run: apk add gcc libffi-dev make musl-dev py3-pip python3-dev && ln -s /usr/bin/python3 /usr/bin/python
      - run: make eyes_selenium_unit_tests
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

  installation-tests:
    needs: dist-build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '2.7', '3.10' ]
        exclude:
          - os: macos-latest
            python-version: '2.7'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - run: make eyes_selenium_installation_tests

  generated-tests:
    needs: dist-build
    strategy:
      matrix:
        python-version: [ '3.6', '3.10' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: latest
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - run: make eyes_selenium_generated_tests
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          APPLITOOLS_API_KEY_READ: ${{ secrets.APPLITOOLS_API_KEY_READ }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN }}

  functional-tests:
    needs: dist-build
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ '2.7', '3.6', '3.10' ]
        exclude:
          - os: windows-latest
            python-version: '3.6'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - run: make eyes_selenium_functional_tests
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}

  sauce-functional-tests:
    needs: dist-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - run: make eyes_selenium_sauce_functional_tests
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

  robot-framework-tests:
    needs: generated-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-python@v3
        with:
          python-version: '3.6'
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - run: make eyes_robotframework_functional_tests
        env:
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
